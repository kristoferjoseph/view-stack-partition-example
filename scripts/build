#!/usr/bin/env node
var path = require('path')
var parse = require('minimist')
var browserify = require('browserify')
var path = require('path')
var prefix = process.env.PREFIX
var args = parse(process.argv)
var entries = args.e.split(',') || args.entries.split(',')
var output = args.o || args.output
var main = args.m || args.main
var url = args.url || ''
var options = {
    main: main,
    map: {}
}
entries.forEach(f=> {
  // We need to treat the entry file differently. You can't expose an alias for it.
  if (f === main) {
    console.info('require:', f)
    console.info('output:', 'entry.js\n')
    // Going to hard code entry.js because works.
    options.map[output+'entry.js'] = [f]
  } else {
    console.info('require:', f)
    console.info('output:', output+f.split('/').pop())
    console.info('expose:', f.split('/').pop().replace('.js', ''), '\n')
    options.map[output+f.split('/').pop()] = [{
      require: f,
      expose: f.split('/').pop().replace('.js', ''),
      url: url
    }]
  }
})

console.info('partitioning bundle with options:\n', options)

var b = browserify({
  entries:entries,
  paths: ['./node_modules']
})
b.plugin('partition-bundle', options)
b.transform('yo-yoify', {global: true})
b.bundle()
